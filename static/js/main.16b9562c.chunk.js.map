{"version":3,"sources":["assets/logo.svg","assets/github-background.svg","pages/Dashboard/style.ts","services/api.ts","pages/Dashboard/Dashboard.tsx","pages/Repository/styles.ts","pages/Repository/Repository.tsx","routes/index.tsx","styles/Global.ts","App.tsx","index.tsx"],"names":["module","exports","Title","styled","h1","Form","form","props","hasError","css","shade","Error","span","Repositories","div","api","axios","create","baseURL","Dashboard","useState","repoInputValue","setRepoInputValue","inputError","setInputError","storagedRepositories","localStorage","getItem","JSON","parse","repositories","setRepositories","event","a","preventDefault","reposNames","map","repository","full_name","toUpperCase","includes","get","data","useEffect","setItem","stringify","src","logoImg","alt","onSubmit","type","placeholder","value","onChange","e","target","to","key","owner","avatar_url","login","description","size","Header","header","RepositoryInfo","section","OpenIssues","Repository","repo","useParams","history","useHistory","setRepository","issues","setIssues","showOptions","setShowOptions","then","response","removeRepo","useCallback","repos","parsedRepos","indexRepoToRemove","findIndex","arrRepo","splice","replace","onClick","style","display","stargazers_count","forks","open_issues","issue","id","rel","href","html_url","title","user","Routes","path","exact","component","GlobalStyle","createGlobalStyle","GithubBackground","App","basename","Global","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,+C,wOCO9BC,EAAQC,IAAOC,GAAV,qHAOLC,EAAOF,IAAOG,KAAV,ysBAeP,SAACC,GAAD,OACEA,EAAMC,UACNC,YADA,kFAqBcC,YAAM,GAAK,YAKxBC,EAAQR,IAAOS,KAAV,4FAMLC,EAAeV,IAAOW,IAAV,4hC,QCxDVC,E,OAJHC,EAAMC,OAAO,CACrBC,QAAS,2BCoHEC,EAtGa,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACvBC,EADuB,KACPC,EADO,OAEMF,mBAAS,IAFf,mBAEvBG,EAFuB,KAEXC,EAFW,OAGUJ,oBAAuB,WAC3D,IAAMK,EAAuBC,aAAaC,QACtC,iCAGJ,OAAIF,EACOG,KAAKC,MAAMJ,GAEX,MAXe,mBAGvBK,EAHuB,KAGTC,EAHS,iDAsB9B,WAAmCC,GAAnC,iBAAAC,EAAA,yDACID,EAAME,iBAENV,EAAc,IAETH,EALT,uBAMQG,EACI,2FAPZ,6BAYUW,EAAaL,EAAaM,KAAI,SAACC,GAAD,OAChCA,EAAWC,UAAUC,kBAGGJ,EAAWK,SACnCnB,EAAekB,eAjBvB,wBAqBQjB,EAAkB,IArB1B,sDA0BiCP,EAAI0B,IAAJ,iBACXpB,IA3BtB,QA0BcgB,EA1Bd,OA6BQN,EAAgB,GAAD,mBAAKD,GAAL,CAAmBO,EAAWK,QA7BrD,mDA+BQlB,EACI,6GAhCZ,yBAmCQF,EAAkB,IAnC1B,+EAtB8B,sBA6D9B,OA9CAqB,qBAAU,WACNjB,aAAakB,QACT,gCACAhB,KAAKiB,UAAUf,MAEpB,CAACA,IA0CA,oCACI,yBAAKgB,IAAKC,IAASC,IAAI,yBACvB,kBAAC9C,EAAD,mDAEA,kBAACG,EAAD,CAAMG,WAAYe,EAAY0B,SAlER,6CAmElB,2BACIC,KAAK,OACLC,YAAY,iBACZC,MAAO/B,EACPgC,SAAU,SAACC,GACPhC,EAAkBgC,EAAEC,OAAOH,UAGnC,4BAAQF,KAAK,UAAb,cAGH3B,GAAc,kBAACZ,EAAD,KAAQY,GAEvB,kBAACV,EAAD,KACKiB,EAAaM,KAAI,SAACC,GAAD,OACd,kBAAC,IAAD,CACImB,GAAE,wBAAmBnB,EAAWC,WAChCmB,IAAKpB,EAAWC,WAEhB,yBACIQ,IAAKT,EAAWqB,MAAMC,WACtBX,IAAKX,EAAWqB,MAAME,QAE1B,6BACI,gCAASvB,EAAWC,WACpB,2BAAID,EAAWwB,cAEnB,kBAAC,IAAD,CAAgBC,KAAM,YC5GjCC,EAAS5D,IAAO6D,OAAV,oYAYEtD,YAAM,GAAK,YAUnBuD,EAAiB9D,IAAO+D,QAAV,+vDAqFdC,EAAahE,IAAOW,IAAV,g7BCkCRsD,EA9Gc,WAAO,IACxBC,EAASC,cAATD,KACFE,EAAUC,cAFe,EAGKpD,mBAA4B,MAHjC,mBAGxBiB,EAHwB,KAGZoC,EAHY,OAIHrD,mBAAkB,IAJf,mBAIxBsD,EAJwB,KAIhBC,EAJgB,OAKOvD,oBAAkB,GALzB,mBAKxBwD,EALwB,KAKXC,EALW,KAO/BlC,qBAAU,WACN5B,EAAI0B,IAAJ,gBAAiB4B,IAAQS,MAAK,SAACC,GAAD,OAC1BN,EAAcM,EAASrC,SAE3B3B,EAAI0B,IAAJ,gBAAiB4B,EAAjB,YAAgCS,MAAK,SAACC,GAClCJ,EAAUI,EAASrC,WAExB,CAAC2B,IAEJ,IAAMW,EAAaC,uBAAY,WAC3B,IAAMC,EAAQxD,aAAaC,QAAQ,iCACnC,GAAIuD,EAAO,CACP,IAAMC,EAAcvD,KAAKC,MAAMqD,GACzBE,EAAoBD,EAAYE,WAClC,SAACC,GAAD,OAAyBA,EAAQhD,WAAa+B,MAEvB,IAAvBe,IACAD,EAAYI,OAAOH,EAAmB,GAEtC1D,aAAakB,QACT,gCACAhB,KAAKiB,UAAUsC,IAEnBZ,EAAQiB,QAAQ,SAGzB,IAEH,OACI,oCACI,kBAACzB,EAAD,KACI,yBAAKjB,IAAKC,IAASC,IAAI,yBACvB,kBAAC,IAAD,CAAMQ,GAAG,KACL,kBAAC,IAAD,CAAeM,KAAM,KACrB,0CAIPzB,GACG,kBAAC4B,EAAD,KACI,gCACI,yBACInB,IAAKT,EAAWqB,MAAMC,WACtBX,IAAKX,EAAWqB,MAAME,QAE1B,6BACI,gCAASvB,EAAWC,WACpB,8BAAOD,EAAWwB,cAEtB,4BACI4B,QAAS,WACLZ,GAAgBD,KAGpB,kBAAC,IAAD,CAAgBd,KAAM,KACtB,yBACI4B,MAAO,CACHC,QAASf,EAAc,QAAU,QAErCa,QAAST,GAET,4CAKZ,4BACI,4BACI,gCAAS3C,EAAWuD,kBACpB,wCAEJ,4BACI,gCAASvD,EAAWwD,OACpB,wCAEJ,4BACI,gCAASxD,EAAWyD,aACpB,mDAMhB,kBAAC3B,EAAD,KACKO,EAAOtC,KAAI,SAAC2D,GAAD,OACR,uBACItC,IAAKsC,EAAMC,GACXzC,OAAO,SACP0C,IAAI,sBACJC,KAAMH,EAAMI,UAEZ,6BACI,gCAASJ,EAAMK,OACf,2BAAIL,EAAMM,KAAKzC,QAEnB,kBAAC,IAAD,CAAgBE,KAAM,YC3H/BwC,EAPU,kBACrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWtF,IACjC,kBAAC,IAAD,CAAOoF,KAAK,uBAAuBE,UAAWrC,M,iBCmCvCsC,EAxCKC,YAAH,qnBAmBiBC,KCRnBC,EATO,kBAClB,oCACI,kBAAC,IAAD,CAAeC,SAAS,oBACpB,kBAAC,EAAD,OAEJ,kBAACC,EAAD,QCPRC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.16b9562c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.18e060ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-background.88c2d35e.svg\";","import styled, { css } from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\ninterface CustomProps {\r\n    hasError: Boolean;\r\n}\r\n\r\nexport const Title = styled.h1`\r\n    font-size: 48px;\r\n    color: #3a3a3a;\r\n    margin-top: 80px;\r\n    max-width: 550px;\r\n`;\r\n\r\nexport const Form = styled.form<CustomProps>`\r\n    margin-top: 40px;\r\n    max-width: 700px;\r\n    display: flex;\r\n\r\n    input {\r\n        flex: 1;\r\n        height: 70px;\r\n        border: 0;\r\n        padding: 0 24px;\r\n        color: #3a3a3a;\r\n        border-radius: 5px 0 0 5px;\r\n        border: 2px solid #fff;\r\n        border-right: 0;\r\n\r\n        ${(props) =>\r\n            props.hasError &&\r\n            css`\r\n                border-color: #c53030;\r\n            `}\r\n\r\n        &::placeholder {\r\n            color: #a8a8b3;\r\n        }\r\n    }\r\n\r\n    button {\r\n        width: 210px;\r\n        height: 70px;\r\n        background: #04d361;\r\n        border: 0;\r\n        color: #fff;\r\n        font-weight: bold;\r\n        border-radius: 0 5px 5px 0;\r\n        transition: background 0.2s;\r\n\r\n        &:hover {\r\n            background: ${shade(0.2, '#04d361')};\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Error = styled.span`\r\n    color: #c53030;\r\n    display: block;\r\n    margin-top: 8px;\r\n`;\r\n\r\nexport const Repositories = styled.div`\r\n    max-width: 700px;\r\n    margin-top: 80px;\r\n\r\n    a {\r\n        text-decoration: none;\r\n        display: flex;\r\n        width: 100%;\r\n        align-items: center;\r\n        padding: 24px;\r\n        background: #fff;\r\n        transition: transform 0.2s;\r\n\r\n        &:hover {\r\n            transform: translateX(10px);\r\n        }\r\n\r\n        & + a {\r\n            margin-top: 16px;\r\n        }\r\n\r\n        img {\r\n            width: 80px;\r\n            height: 80px;\r\n            border-radius: 50%;\r\n        }\r\n\r\n        div {\r\n            margin: 16px;\r\n            flex: 1;\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: space-between;\r\n\r\n            strong {\r\n                font-size: 20px;\r\n                color: #3d3d4d;\r\n            }\r\n\r\n            p {\r\n                font-size: 18px;\r\n                margin-top: 4px;\r\n                color: #a8a8b3;\r\n            }\r\n        }\r\n        svg {\r\n            margin-left: auto;\r\n            color: #cbcbd6;\r\n        }\r\n    }\r\n`;\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://api.github.com',\r\n});\r\n\r\nexport default api;\r\n","import React, { useState, FormEvent, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Title, Form, Repositories, Error } from './style';\nimport api from '../../services/api';\n\ninterface Repository {\n    full_name: string;\n    owner: {\n        login: string;\n        avatar_url: string;\n    };\n    description: string | null;\n}\n\nconst Dashboard: React.FC = () => {\n    const [repoInputValue, setRepoInputValue] = useState('');\n    const [inputError, setInputError] = useState('');\n    const [repositories, setRepositories] = useState<Repository[]>(() => {\n        const storagedRepositories = localStorage.getItem(\n            '@Github-Explorer:repositories',\n        );\n\n        if (storagedRepositories) {\n            return JSON.parse(storagedRepositories);\n        } else {\n            return [];\n        }\n    });\n\n    useEffect(() => {\n        localStorage.setItem(\n            '@Github-Explorer:repositories',\n            JSON.stringify(repositories),\n        );\n    }, [repositories]);\n\n    async function handleAddRepository(event: FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n\n        setInputError('');\n\n        if (!repoInputValue) {\n            setInputError(\n                'Digite uma combinação do usuário do autor do repositório separados por \"/\".',\n            );\n            return;\n        }\n\n        const reposNames = repositories.map((repository) =>\n            repository.full_name.toUpperCase(),\n        );\n\n        const repoAlreadyIncluded = reposNames.includes(\n            repoInputValue.toUpperCase(),\n        );\n\n        if (repoAlreadyIncluded) {\n            setRepoInputValue('');\n            return;\n        }\n\n        try {\n            const repository = await api.get<Repository>(\n                `/repos/${repoInputValue}`,\n            );\n            setRepositories([...repositories, repository.data]);\n        } catch (err) {\n            setInputError(\n                'Combinação inexistente de autor e repositório. Digite um valor válido no formato \"autor/repo\"',\n            );\n        } finally {\n            setRepoInputValue('');\n        }\n    }\n\n    return (\n        <>\n            <img src={logoImg} alt=\"Github Explorer logo\" />\n            <Title>Explore e salve repositórios do GitHub.</Title>\n\n            <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n                <input\n                    type=\"text\"\n                    placeholder=\"facebook/react\"\n                    value={repoInputValue}\n                    onChange={(e) => {\n                        setRepoInputValue(e.target.value);\n                    }}\n                />\n                <button type=\"submit\">Pesquisar</button>\n            </Form>\n\n            {inputError && <Error>{inputError}</Error>}\n\n            <Repositories>\n                {repositories.map((repository) => (\n                    <Link\n                        to={`/repositories/${repository.full_name}`}\n                        key={repository.full_name}\n                    >\n                        <img\n                            src={repository.owner.avatar_url}\n                            alt={repository.owner.login}\n                        />\n                        <div>\n                            <strong>{repository.full_name}</strong>\n                            <p>{repository.description}</p>\n                        </div>\n                        <FiChevronRight size={25} />\n                    </Link>\n                ))}\n            </Repositories>\n        </>\n    );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Header = styled.header`\n    display: flex;\n    align-content: center;\n    justify-content: space-between;\n\n    a {\n        display: flex;\n        align-items: center;\n        color: #a8a8b3;\n        transition: color 0.2s;\n\n        &:hover {\n            color: ${shade(0.4, '#a8a8b3')};\n        }\n\n        span {\n            display: block;\n            margin-left: 4px;\n        }\n    }\n`;\n\nexport const RepositoryInfo = styled.section`\n    margin-top: 80px;\n\n    header {\n        display: flex;\n        align-items: center;\n        > img {\n            width: 120px;\n            height: 120px;\n            border-radius: 50%;\n        }\n\n        > div {\n            margin-left: 24px;\n\n            > strong {\n                font-size: 36px;\n                color: #3d3d4d;\n            }\n\n            > span {\n                font-size: 18px;\n                display: block;\n                margin-top: 4px;\n                color: #737380;\n            }\n        }\n\n        > button {\n            margin-left: auto;\n            outline: 0;\n            background: transparent;\n            border: none;\n\n            position: relative;\n\n            > div {\n                display: none;\n                position: absolute;\n                left: -3rem;\n                top: 2rem;\n\n                transition: transform 0.2s;\n\n                &:hover {\n                    transform: translateX(5px);\n                }\n                background: #fff;\n                color: #ff1744;\n                font-weight: bold;\n                border-radius: 5px;\n                border: 0;\n\n                padding: 8px 16px;\n\n                > span {\n                    padding: 0 16px;\n                }\n            }\n        }\n    }\n\n    ul {\n        display: flex;\n        margin-top: 40px;\n\n        li {\n            & + li {\n                margin-left: 80px;\n            }\n\n            strong {\n                font-size: 36px;\n                color: #3d3d4d;\n            }\n\n            span {\n                font-size: 18px;\n                display: block;\n                color: #6c6c80;\n            }\n        }\n    }\n`;\n\nexport const OpenIssues = styled.div`\n    margin-top: 80px;\n\n    a {\n        text-decoration: none;\n        display: flex;\n        width: 100%;\n        align-items: center;\n        padding: 24px;\n        border-radius: 5px;\n        background: #fff;\n        transition: transform 0.2s;\n\n        &:hover {\n            transform: translateX(10px);\n        }\n\n        & + a {\n            margin-top: 16px;\n        }\n\n        div {\n            margin: 16px;\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-between;\n\n            strong {\n                font-size: 20px;\n                color: #3d3d4d;\n            }\n\n            p {\n                font-size: 18px;\n                margin-top: 4px;\n                color: #a8a8b3;\n            }\n        }\n        svg {\n            margin-left: auto;\n            color: #cbcbd6;\n        }\n    }\n`;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight, FiMoreVertical } from 'react-icons/fi';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Header, RepositoryInfo, OpenIssues } from './styles';\nimport api from '../../services/api';\n\ninterface RouteParams {\n    repo: string;\n}\n\ninterface Repository {\n    full_name: string;\n    name: string;\n    owner: {\n        avatar_url: string;\n        login: string;\n    };\n    description: string | null;\n    forks: number;\n    open_issues: number;\n    stargazers_count: number;\n}\n\ninterface Issue {\n    id: number;\n    title: string;\n    user: {\n        login: string;\n    };\n    html_url: string;\n}\n\nconst Repository: React.FC = () => {\n    const { repo } = useParams<RouteParams>();\n    const history = useHistory();\n    const [repository, setRepository] = useState<Repository | null>(null);\n    const [issues, setIssues] = useState<Issue[]>([]);\n    const [showOptions, setShowOptions] = useState<boolean>(false);\n\n    useEffect(() => {\n        api.get(`repos/${repo}`).then((response) =>\n            setRepository(response.data),\n        );\n        api.get(`repos/${repo}/issues`).then((response) => {\n            setIssues(response.data);\n        });\n    }, [repo]);\n\n    const removeRepo = useCallback(() => {\n        const repos = localStorage.getItem('@Github-Explorer:repositories');\n        if (repos) {\n            const parsedRepos = JSON.parse(repos);\n            const indexRepoToRemove = parsedRepos.findIndex(\n                (arrRepo: Repository) => arrRepo.full_name == repo,\n            );\n            if (indexRepoToRemove !== -1) {\n                parsedRepos.splice(indexRepoToRemove, 1);\n\n                localStorage.setItem(\n                    '@Github-Explorer:repositories',\n                    JSON.stringify(parsedRepos),\n                );\n                history.replace('/');\n            }\n        }\n    }, []);\n\n    return (\n        <>\n            <Header>\n                <img src={logoImg} alt=\"GitHub Explorer logo\" />\n                <Link to=\"/\">\n                    <FiChevronLeft size={16} />\n                    <span>Voltar</span>\n                </Link>\n            </Header>\n\n            {repository && (\n                <RepositoryInfo>\n                    <header>\n                        <img\n                            src={repository.owner.avatar_url}\n                            alt={repository.owner.login}\n                        />\n                        <div>\n                            <strong>{repository.full_name}</strong>\n                            <span>{repository.description}</span>\n                        </div>\n                        <button\n                            onClick={() => {\n                                setShowOptions(!showOptions);\n                            }}\n                        >\n                            <FiMoreVertical size={25} />\n                            <div\n                                style={{\n                                    display: showOptions ? 'block' : 'none',\n                                }}\n                                onClick={removeRepo}\n                            >\n                                <span>Remover</span>\n                            </div>\n                        </button>\n                    </header>\n\n                    <ul>\n                        <li>\n                            <strong>{repository.stargazers_count}</strong>\n                            <span>Stars</span>\n                        </li>\n                        <li>\n                            <strong>{repository.forks}</strong>\n                            <span>Forks</span>\n                        </li>\n                        <li>\n                            <strong>{repository.open_issues}</strong>\n                            <span>Issues abertas</span>\n                        </li>\n                    </ul>\n                </RepositoryInfo>\n            )}\n\n            <OpenIssues>\n                {issues.map((issue) => (\n                    <a\n                        key={issue.id}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={issue.html_url}\n                    >\n                        <div>\n                            <strong>{issue.title}</strong>\n                            <p>{issue.user.login}</p>\n                        </div>\n                        <FiChevronRight size={25} />\n                    </a>\n                ))}\n            </OpenIssues>\n        </>\n    );\n};\n\nexport default Repository;\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Dashboard from '../pages/Dashboard/Dashboard';\r\nimport Repository from '../pages/Repository/Repository';\r\n\r\nconst Routes: React.FC = () => (\r\n    <Switch>\r\n        <Route path=\"/\" exact component={Dashboard} />\r\n        <Route path=\"/repositories/:repo+\" component={Repository} />\r\n    </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import { createGlobalStyle } from 'styled-components';\n\nimport GithubBackground from '../assets/github-background.svg';\n\nconst GlobalStyle = createGlobalStyle`\n\n    *{\n        margin:0;\n        padding:0;\n        outline:0;\n        box-sizing:border-box;\n    }\n\n    li{\n        list-style:none;\n    }\n\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n\n    body{\n        background: #F0F0F5 url(${GithubBackground}) no-repeat 70% top;\n        -webkit-font-smoothing:antialiased;\n    }\n\n    body, input, button, span{\n        font-size:16px ;\n        font-family:Roboto, sans-serif;\n    }\n\n    button{\n        cursor:pointer;\n    }\n\n    #root{\n        max-width:960px;\n        margin:0 auto;\n        padding:40px 20px;\n    }\n\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Routes from './routes';\nimport GlobalStyle from './styles/Global';\n\nconst App: React.FC = () => (\n    <>\n        <BrowserRouter basename=\"/github-explorer\">\n            <Routes />\n        </BrowserRouter>\n        <GlobalStyle />\n    </>\n);\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}